<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sin.smart.main.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.sin.smart.entity.main.SmartPermissionEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="module_id" property="moduleId" jdbcType="BIGINT" />
    <result column="action_name" property="actionName" jdbcType="VARCHAR" />
    <result column="action_code" property="actionCode" jdbcType="VARCHAR" />
    <result column="is_active" property="isActive" jdbcType="BIT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="http_method" property="httpMethod" jdbcType="VARCHAR" />
    <result column="relation_url" property="relationUrl" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    <result column="is_module_default" property="isModuleDefault" jdbcType="BIT" />
  </resultMap>

  <resultMap id="ModulePermResultMap" type="java.util.LinkedHashMap">
    <result column="module_id" property="moduleId" jdbcType="BIGINT" />
    <result column="action_name" property="actionName" jdbcType="VARCHAR" />
    <result column="action_code" property="actionCode" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, module_id, action_name, action_code, is_active, url, http_method, relation_url, 
    description, create_user, create_time, update_user, update_time, is_module_default
  </sql>

  <select id="selectPermissionMapperByUserId" resultMap="ModulePermResultMap" parameterType="java.lang.Long" >
    select module_id,action_code,action_name from `t_smart_permission` where id in (
        select action_Id from `t_smart_role_permission` where  relation_type='a' AND role_id in (
           select role_id from `t_smart_user_role` where user_id = #{userId,jdbcType=BIGINT}
        )
    )
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_smart_permission
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_smart_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.sin.smart.entity.main.SmartPermissionEntity" >
    insert into t_smart_permission (id, module_id, action_name, 
      action_code, is_active, url, 
      http_method, relation_url, description, 
      create_user, create_time, update_user, 
      update_time, is_module_default)
    values (#{id,jdbcType=BIGINT}, #{moduleId,jdbcType=BIGINT}, #{actionName,jdbcType=VARCHAR}, 
      #{actionCode,jdbcType=VARCHAR}, #{isActive,jdbcType=BIT}, #{url,jdbcType=VARCHAR}, 
      #{httpMethod,jdbcType=VARCHAR}, #{relationUrl,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=BIGINT}, #{isModuleDefault,jdbcType=BIT})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.sin.smart.entity.main.SmartPermissionEntity" >
    update t_smart_permission
    set module_id = #{moduleId,jdbcType=BIGINT},
      action_name = #{actionName,jdbcType=VARCHAR},
      action_code = #{actionCode,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=BIT},
      url = #{url,jdbcType=VARCHAR},
      http_method = #{httpMethod,jdbcType=VARCHAR},
      relation_url = #{relationUrl,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT},
      is_module_default = #{isModuleDefault,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>